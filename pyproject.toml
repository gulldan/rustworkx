[build-system]
requires = ["maturin>=1.8,<2.0"]
build-backend = "maturin"

[project]
name = "rustworkx"
description = "A python graph library implemented in Rust"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.11"
authors = [
    {name = "Matthew Treinish", email = "mtreinish@kortar.org"},
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]
keywords = ["Networks", "network", "graph", "Graph Theory", "DAG"]

dynamic = ["version"]
dependencies = [
    "polars>=1.31.0",
    "pyarrow>=20.0.0",
    "python-igraph>=0.11.9",
]

[dependency-groups]
dev = [
  "ruff>=0.11.0",
  "cdlib>=0.4.0",
  "leidenalg>=0.10.2",
  "matplotlib>=3.9.4",
  "networkx>=3.2.1",
  "numpy>=1.16.0,<3",
  "polars>=1.26.0",
  "pytest>=8.3.5",
  "reno>=4.1.0",
  "scikit-learn>=1.6.1",
]
[project.urls]
"Bug Tracker" = "https://github.com/Qiskit/rustworkx/issues"
"Source Code" = "https://github.com/Qiskit/rustworkx"
"Documentation" = "https://www.rustworkx.org/"

[project.optional-dependencies]
mpl = ["matplotlib>=3.0"]
graphviz = ["pillow>=5.4"]
all = ["matplotlib>=3.0", "pillow>=5.4"]

[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "."
module-name = "rustworkx.rustworkx"
binding = "pyo3"
py-limited-api = "cp311"

[tool.black]
line-length = 100
target-version = ['py311', 'py312', 'py313']

[tool.ruff]
line-length = 105 # more lenient than black due to long function signatures
src = ["rustworkx", "setup.py", "retworkx", "tests"]
lint.select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "UP",  # pyupgrade
    "PYI", # flake8-pyi
    "Q",   # flake8-quotes
]
lint.ignore = ["E501"]
target-version = "py311"
extend-exclude = ["doc"]

[tool.ruff.lint.per-file-ignores]
"rustworkx/__init__.py" = ["F405", "F403"]
"*.pyi" = ["F403", "F405", "PYI001", "PYI002"]

[tool.typos.default]
extend-ignore-words-re = [
  "[Ss]toer",
]

[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
skip = "pp* cp36-* cp37-* cp38-* *win32 *musllinux*i686"
test-requires = "networkx"
test-command = "python -m unittest discover {project}/tests"
before-build = "pip install -U maturin"
test-skip = "*linux_s390x *ppc64le *musllinux*aarch64"

[tool.cibuildwheel.linux]
before-all = "yum install -y wget && {package}/tools/install_rust.sh"
environment = 'PATH="$PATH:$HOME/.cargo/bin" CARGO_NET_GIT_FETCH_WITH_CLI="true"'
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel} && pipx run abi3audit==0.0.9 --strict --report {wheel}"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = "apk add --no-cache curl gcc && curl https://sh.rustup.rs -sSf | sh -s -- -y && source $HOME/.cargo/env && rustup install stable && rustup default stable"

[[tool.cibuildwheel.overrides]]
select = "*i686"
before-test = 'python -m pip install numpy --config-settings=setup-args="-Dallow-noblas=true"'

[tool.cibuildwheel.macos]
environment = "MACOSX_DEPLOYMENT_TARGET=10.12"
repair-wheel-command = "brew install pipx && pipx ensurepath && pipx run --spec delocate==0.11.0  delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} && pipx run abi3audit==0.0.9 --strict --report {wheel}"

[tool.cibuildwheel.windows]
repair-wheel-command = "cp {wheel} {dest_dir}/. && pipx run abi3audit==0.0.9 --strict --report {wheel}"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --durations=10"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["rustworkx"]
